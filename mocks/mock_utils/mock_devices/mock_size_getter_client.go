// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/netapp/trident/utils/devices (interfaces: SizeGetter)
//
// Generated by this command:
//
//	mockgen -destination=../../mocks/mock_utils/mock_devices/mock_size_getter_client.go github.com/netapp/trident/utils/devices SizeGetter
//

// Package mock_devices is a generated GoMock package.
package mock_devices

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockSizeGetter is a mock of SizeGetter interface.
type MockSizeGetter struct {
	ctrl     *gomock.Controller
	recorder *MockSizeGetterMockRecorder
}

// MockSizeGetterMockRecorder is the mock recorder for MockSizeGetter.
type MockSizeGetterMockRecorder struct {
	mock *MockSizeGetter
}

// NewMockSizeGetter creates a new mock instance.
func NewMockSizeGetter(ctrl *gomock.Controller) *MockSizeGetter {
	mock := &MockSizeGetter{ctrl: ctrl}
	mock.recorder = &MockSizeGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSizeGetter) EXPECT() *MockSizeGetterMockRecorder {
	return m.recorder
}

// GetDiskSize mocks base method.
func (m *MockSizeGetter) GetDiskSize(arg0 context.Context, arg1 string) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDiskSize", arg0, arg1)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDiskSize indicates an expected call of GetDiskSize.
func (mr *MockSizeGetterMockRecorder) GetDiskSize(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDiskSize", reflect.TypeOf((*MockSizeGetter)(nil).GetDiskSize), arg0, arg1)
}
