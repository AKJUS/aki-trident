// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/netapp/trident/internal/nodeprep/nodeinfo (interfaces: OS)
//
// Generated by this command:
//
//	mockgen -destination=../../../mocks/mock_internal/mock_nodeprep/mock_nodeinfo/mock_os.go github.com/netapp/trident/internal/nodeprep/nodeinfo OS
//

// Package mock_nodeinfo is a generated GoMock package.
package mock_nodeinfo

import (
	context "context"
	reflect "reflect"

	models "github.com/netapp/trident/utils/models"
	gomock "go.uber.org/mock/gomock"
)

// MockOS is a mock of OS interface.
type MockOS struct {
	ctrl     *gomock.Controller
	recorder *MockOSMockRecorder
}

// MockOSMockRecorder is the mock recorder for MockOS.
type MockOSMockRecorder struct {
	mock *MockOS
}

// NewMockOS creates a new mock instance.
func NewMockOS(ctrl *gomock.Controller) *MockOS {
	mock := &MockOS{ctrl: ctrl}
	mock.recorder = &MockOSMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOS) EXPECT() *MockOSMockRecorder {
	return m.recorder
}

// GetHostSystemInfo mocks base method.
func (m *MockOS) GetHostSystemInfo(arg0 context.Context) (*models.HostSystem, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHostSystemInfo", arg0)
	ret0, _ := ret[0].(*models.HostSystem)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetHostSystemInfo indicates an expected call of GetHostSystemInfo.
func (mr *MockOSMockRecorder) GetHostSystemInfo(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHostSystemInfo", reflect.TypeOf((*MockOS)(nil).GetHostSystemInfo), arg0)
}
