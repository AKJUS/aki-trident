// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/netapp/trident/internal/fiji (interfaces: Injector)

// Package mock_fiji is a generated GoMock package.
package mock_fiji

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockInjector is a mock of Injector interface.
type MockInjector struct {
	ctrl     *gomock.Controller
	recorder *MockInjectorMockRecorder
}

// MockInjectorMockRecorder is the mock recorder for MockInjector.
type MockInjectorMockRecorder struct {
	mock *MockInjector
}

// NewMockInjector creates a new mock instance.
func NewMockInjector(ctrl *gomock.Controller) *MockInjector {
	mock := &MockInjector{ctrl: ctrl}
	mock.recorder = &MockInjectorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInjector) EXPECT() *MockInjectorMockRecorder {
	return m.recorder
}

// Inject mocks base method.
func (m *MockInjector) Inject() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Inject")
	ret0, _ := ret[0].(error)
	return ret0
}

// Inject indicates an expected call of Inject.
func (mr *MockInjectorMockRecorder) Inject() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Inject", reflect.TypeOf((*MockInjector)(nil).Inject))
}
